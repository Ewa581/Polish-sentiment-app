name: CI/CD Pipeline with ONNX
on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

jobs:
  integration:
    name: Run Integration Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install integration dependencies
        run: uv pip install --group integration

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run pip-audit
        run: uv run pip-audit --vulnerability-service pypi

      - name: Run pytest
        run: uv run pytest tests/

  deployment:
    name: Model Optimization with ONNX
    runs-on: ubuntu-latest
    needs: integration  
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install deployment dependencies
        run: uv pip install --group deployment

      - name: Download model artifacts
        run: |
          uv run python src/scripts/download_artifacts.py
          
      - name: Export to ONNX
        run: |
          uv run python src/scripts/export_model_to_onnx.py
         
      - name: Verify ONNX model
        run: |
          python -c "import onnx; onnx.load('model.onnx')"
          echo "ONNX model validated successfully"